

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 09 22:30:18 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	idataBANK0
   216  01A9                     __pidataBANK0:
   217                           
   218                           ;initializer for _display
   219  01A9  34BF               	retlw	191
   220  01AA  3400               	retlw	0
   221  01AB  3486               	retlw	134
   222  01AC  3400               	retlw	0
   223  01AD  34DB               	retlw	219
   224  01AE  3400               	retlw	0
   225  01AF  34CF               	retlw	207
   226  01B0  3400               	retlw	0
   227  01B1  34E6               	retlw	230
   228  01B2  3400               	retlw	0
   229  01B3  34ED               	retlw	237
   230  01B4  3400               	retlw	0
   231  01B5  34FD               	retlw	253
   232  01B6  3400               	retlw	0
   233  01B7  3487               	retlw	135
   234  01B8  3400               	retlw	0
   235  01B9  34FF               	retlw	255
   236  01BA  3400               	retlw	0
   237  01BB  34EF               	retlw	239
   238  01BC  3400               	retlw	0
   239                           
   240                           	psect	nvCOMMON
   241  0076                     __pnvCOMMON:
   242  0076                     _valor:
   243  0076                     	ds	2
   244                           
   245                           	psect	nvBANK0
   246  0045                     __pnvBANK0:
   247  0045                     _unidad:
   248  0045                     	ds	2
   249  0047                     _decena:
   250  0047                     	ds	2
   251  0049                     _centena:
   252  0049                     	ds	2
   253  0008                     _PORTD	set	8
   254  0006                     _PORTB	set	6
   255  0007                     _PORTC	set	7
   256  0008                     _PORTDbits	set	8
   257  0001                     _TMR0	set	1
   258  000B                     _INTCONbits	set	11
   259  0081                     _OPTION_REGbits	set	129
   260  0088                     _TRISDbits	set	136
   261  0087                     _TRISC	set	135
   262  0085                     _TRISA	set	133
   263  008F                     _OSCCONbits	set	143
   264  0189                     _ANSELH	set	393
   265  0188                     _ANSEL	set	392
   266                           
   267                           	psect	cinit
   268  0011                     start_initialization:	
   269                           ; #config settings
   270                           
   271  0011                     __initialization:
   272                           
   273                           ; Initialize objects allocated to BANK0
   274  0011  1383               	bcf	3,7	;select IRP bank0
   275  0012  3034               	movlw	low (__pdataBANK0+20)
   276  0013  00FD               	movwf	btemp+-1
   277  0014  3001               	movlw	high __pidataBANK0
   278  0015  00FE               	movwf	btemp
   279  0016  30A9               	movlw	low __pidataBANK0
   280  0017  00FF               	movwf	btemp+1
   281  0018  3020               	movlw	low __pdataBANK0
   282  0019  0084               	movwf	4
   283  001A  120A  118A  21C1  120A  118A  	fcall	init_ram0
   284                           
   285                           ; Clear objects allocated to COMMON
   286  001F  01F8               	clrf	__pbssCOMMON& (0+127)
   287  0020  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   288  0021                     end_of_initialization:	
   289                           ;End of C runtime variable initialization code
   290                           
   291  0021                     __end_of__initialization:
   292  0021  0183               	clrf	3
   293  0022  120A  118A  2992   	ljmp	_main	;jump to C main() function
   294                           
   295                           	psect	bssCOMMON
   296  0078                     __pbssCOMMON:
   297  0078                     _bandera:
   298  0078                     	ds	2
   299                           
   300                           	psect	dataBANK0
   301  0020                     __pdataBANK0:
   302  0020                     _display:
   303  0020                     	ds	20
   304                           
   305                           	psect	inittext
   306  01BD                     init_fetch0:	
   307                           ;	Called with low address in FSR and high address in W
   308                           
   309  01BD  087E               	movf	btemp,w
   310  01BE  008A               	movwf	10
   311  01BF  087F               	movf	btemp+1,w
   312  01C0  0082               	movwf	2
   313  01C1                     init_ram0:	
   314                           ;Called with:
   315                           ;	high address of idata address in btemp 
   316                           ;	low address of idata address in btemp+1 
   317                           ;	low address of data in FSR
   318                           ;	high address + 1 of data in btemp-1
   319                           
   320  01C1  120A  118A  21BD  120A  118A  	fcall	init_fetch0
   321  01C6  0080               	movwf	0
   322  01C7  0A84               	incf	4,f
   323  01C8  0804               	movf	4,w
   324  01C9  067D               	xorwf	btemp+-1,w
   325  01CA  1903               	btfsc	3,2
   326  01CB  3400               	retlw	0
   327  01CC  0AFF               	incf	btemp+1,f
   328  01CD  1903               	btfsc	3,2
   329  01CE  0AFE               	incf	btemp,f
   330  01CF  29C1               	goto	init_ram0
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:
   334  0070                     ?_isr:
   335  0070                     ??_isr:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_setup:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0070                     	ds	4
   347  0074                     ??___wmul:
   348  0074                     ___wmul@product:	
   349                           ; 1 bytes @ 0x4
   350                           
   351                           
   352                           ; 2 bytes @ 0x4
   353  0074                     	ds	2
   354  0076                     ??_main:
   355                           
   356                           	psect	cstackBANK0
   357  0034                     __pcstackBANK0:	
   358                           ; 1 bytes @ 0x6
   359                           
   360  0034                     ?___wmul:
   361  0034                     ___wmul@multiplier:	
   362                           ; 2 bytes @ 0x0
   363                           
   364                           
   365                           ; 2 bytes @ 0x0
   366  0034                     	ds	2
   367  0036                     ___wmul@multiplicand:
   368                           
   369                           ; 2 bytes @ 0x2
   370  0036                     	ds	2
   371  0038                     ?___awdiv:
   372  0038                     ___awdiv@divisor:	
   373                           ; 2 bytes @ 0x4
   374                           
   375                           
   376                           ; 2 bytes @ 0x4
   377  0038                     	ds	2
   378  003A                     ___awdiv@dividend:
   379                           
   380                           ; 2 bytes @ 0x6
   381  003A                     	ds	2
   382  003C                     ??___awdiv:
   383                           
   384                           ; 1 bytes @ 0x8
   385  003C                     	ds	1
   386  003D                     ___awdiv@counter:
   387                           
   388                           ; 1 bytes @ 0x9
   389  003D                     	ds	1
   390  003E                     ___awdiv@sign:
   391                           
   392                           ; 1 bytes @ 0xA
   393  003E                     	ds	1
   394  003F                     ___awdiv@quotient:
   395                           
   396                           ; 2 bytes @ 0xB
   397  003F                     	ds	2
   398  0041                     ??_setup:
   399                           
   400                           ; 1 bytes @ 0xD
   401  0041                     	ds	4
   402                           
   403                           	psect	maintext
   404  0192                     __pmaintext:	
   405 ;;
   406 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   407 ;;
   408 ;; *************** function _main *****************
   409 ;; Defined at:
   410 ;;		line 97 in file "PRCT7.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : B00/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0
   427 ;;      Totals:         0       0       0       0       0
   428 ;;Total ram usage:        0 bytes
   429 ;; Hardware stack levels required when called: 3
   430 ;; This function calls:
   431 ;;		_setup
   432 ;; This function is called by:
   433 ;;		Startup code after reset
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437  0192                     _main:	
   438                           ;psect for function _main
   439                           
   440  0192                     l998:	
   441                           ;incstack = 0
   442                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   443                           
   444                           
   445                           ;PRCT7.c: 98:     PORTB = 0;
   446  0192  1283               	bcf	3,5	;RP0=0, select bank0
   447  0193  1303               	bcf	3,6	;RP1=0, select bank0
   448  0194  0186               	clrf	6	;volatile
   449                           
   450                           ;PRCT7.c: 99:     PORTD = 0;
   451  0195  0188               	clrf	8	;volatile
   452                           
   453                           ;PRCT7.c: 100:     centena = 0;
   454  0196  01C9               	clrf	_centena
   455  0197  01CA               	clrf	_centena+1
   456                           
   457                           ;PRCT7.c: 101:     decena = 0;
   458  0198  01C7               	clrf	_decena
   459  0199  01C8               	clrf	_decena+1
   460                           
   461                           ;PRCT7.c: 102:     unidad = 0;
   462  019A  01C5               	clrf	_unidad
   463  019B  01C6               	clrf	_unidad+1
   464  019C                     l1000:
   465                           
   466                           ;PRCT7.c: 103:     valor = 999;
   467  019C  30E7               	movlw	231
   468  019D  00F6               	movwf	_valor
   469  019E  3003               	movlw	3
   470  019F  00F7               	movwf	_valor+1
   471  01A0                     l1002:
   472                           
   473                           ;PRCT7.c: 104:     setup();
   474  01A0  120A  118A  2025  120A  118A  	fcall	_setup
   475  01A5                     l57:	
   476                           ;PRCT7.c: 105:     while(1)
   477                           
   478  01A5                     l58:	
   479                           ;PRCT7.c: 106:     {;PRCT7.c: 107:     }
   480                           
   481  01A5  29A5               	goto	l57
   482  01A6  120A  118A  280E   	ljmp	start
   483  01A9                     __end_of_main:
   484                           
   485                           	psect	text1
   486  0025                     __ptext1:	
   487 ;; *************** function _setup *****************
   488 ;; Defined at:
   489 ;;		line 64 in file "PRCT7.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0
   505 ;;      Temps:          0       4       0       0       0
   506 ;;      Totals:         0       4       0       0       0
   507 ;;Total ram usage:        4 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; Hardware stack levels required when called: 2
   510 ;; This function calls:
   511 ;;		___awdiv
   512 ;;		___wmul
   513 ;; This function is called by:
   514 ;;		_main
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518  0025                     _setup:	
   519                           ;psect for function _setup
   520                           
   521  0025                     l954:	
   522                           ;incstack = 0
   523                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   524                           
   525                           
   526                           ;PRCT7.c: 65:     ANSEL = 0;
   527  0025  1683               	bsf	3,5	;RP0=1, select bank3
   528  0026  1703               	bsf	3,6	;RP1=1, select bank3
   529  0027  0188               	clrf	8	;volatile
   530                           
   531                           ;PRCT7.c: 66:     ANSELH = 0;
   532  0028  0189               	clrf	9	;volatile
   533  0029                     l956:
   534                           
   535                           ;PRCT7.c: 68:     OSCCONbits.IRCF = 0b0100;
   536  0029  1683               	bsf	3,5	;RP0=1, select bank1
   537  002A  1303               	bcf	3,6	;RP1=0, select bank1
   538  002B  080F               	movf	15,w	;volatile
   539  002C  398F               	andlw	-113
   540  002D  3840               	iorlw	64
   541  002E  008F               	movwf	15	;volatile
   542  002F                     l958:
   543                           
   544                           ;PRCT7.c: 69:     OSCCONbits.SCS = 1;
   545  002F  140F               	bsf	15,0	;volatile
   546  0030                     l960:
   547                           
   548                           ;PRCT7.c: 72:     TRISA = 0;
   549  0030  0185               	clrf	5	;volatile
   550  0031                     l962:
   551                           
   552                           ;PRCT7.c: 73:     TRISC = 0;
   553  0031  0187               	clrf	7	;volatile
   554  0032                     l964:
   555                           
   556                           ;PRCT7.c: 74:     TRISDbits.TRISD0 = 0;
   557  0032  1008               	bcf	8,0	;volatile
   558  0033                     l966:
   559                           
   560                           ;PRCT7.c: 75:     TRISDbits.TRISD1 = 0;
   561  0033  1088               	bcf	8,1	;volatile
   562  0034                     l968:
   563                           
   564                           ;PRCT7.c: 76:     TRISDbits.TRISD2 = 0;
   565  0034  1108               	bcf	8,2	;volatile
   566  0035                     l970:
   567                           
   568                           ;PRCT7.c: 79:     INTCONbits.GIE = 1;
   569  0035  178B               	bsf	11,7	;volatile
   570  0036                     l972:
   571                           
   572                           ;PRCT7.c: 80:     PORTB = 0;
   573  0036  1283               	bcf	3,5	;RP0=0, select bank0
   574  0037  1303               	bcf	3,6	;RP1=0, select bank0
   575  0038  0186               	clrf	6	;volatile
   576  0039                     l974:
   577                           
   578                           ;PRCT7.c: 82:     OPTION_REGbits.T0CS = 0;
   579  0039  1683               	bsf	3,5	;RP0=1, select bank1
   580  003A  1303               	bcf	3,6	;RP1=0, select bank1
   581  003B  1281               	bcf	1,5	;volatile
   582  003C                     l976:
   583                           
   584                           ;PRCT7.c: 83:     OPTION_REGbits.PSA = 0;
   585  003C  1181               	bcf	1,3	;volatile
   586  003D                     l978:
   587                           
   588                           ;PRCT7.c: 84:     OPTION_REGbits.PS2 = 1;
   589  003D  1501               	bsf	1,2	;volatile
   590  003E                     l980:
   591                           
   592                           ;PRCT7.c: 85:     OPTION_REGbits.PS1 = 1;
   593  003E  1481               	bsf	1,1	;volatile
   594  003F                     l982:
   595                           
   596                           ;PRCT7.c: 86:     OPTION_REGbits.PS0 = 0;
   597  003F  1001               	bcf	1,0	;volatile
   598  0040                     l984:
   599                           
   600                           ;PRCT7.c: 87:     INTCONbits.T0IF = 0;
   601  0040  110B               	bcf	11,2	;volatile
   602  0041                     l986:
   603                           
   604                           ;PRCT7.c: 88:     INTCONbits.T0IE = 1;
   605  0041  168B               	bsf	11,5	;volatile
   606  0042                     l988:
   607                           
   608                           ;PRCT7.c: 89:     TMR0 = 252;
   609  0042  30FC               	movlw	252
   610  0043  1283               	bcf	3,5	;RP0=0, select bank0
   611  0044  1303               	bcf	3,6	;RP1=0, select bank0
   612  0045  0081               	movwf	1	;volatile
   613  0046                     l990:
   614                           
   615                           ;PRCT7.c: 91:     centena = valor/100;
   616  0046  3064               	movlw	100
   617  0047  00B8               	movwf	___awdiv@divisor
   618  0048  3000               	movlw	0
   619  0049  00B9               	movwf	___awdiv@divisor+1
   620  004A  0877               	movf	_valor+1,w
   621  004B  00BB               	movwf	___awdiv@dividend+1
   622  004C  0876               	movf	_valor,w
   623  004D  00BA               	movwf	___awdiv@dividend
   624  004E  120A  118A  20B2  120A  118A  	fcall	___awdiv
   625  0053  1283               	bcf	3,5	;RP0=0, select bank0
   626  0054  1303               	bcf	3,6	;RP1=0, select bank0
   627  0055  0839               	movf	?___awdiv+1,w
   628  0056  00CA               	movwf	_centena+1
   629  0057  0838               	movf	?___awdiv,w
   630  0058  00C9               	movwf	_centena
   631  0059                     l992:
   632                           
   633                           ;PRCT7.c: 92:     decena = (valor -(centena*100))/10;
   634  0059  300A               	movlw	10
   635  005A  00B8               	movwf	___awdiv@divisor
   636  005B  3000               	movlw	0
   637  005C  00B9               	movwf	___awdiv@divisor+1
   638  005D  084A               	movf	_centena+1,w
   639  005E  00B5               	movwf	___wmul@multiplier+1
   640  005F  0849               	movf	_centena,w
   641  0060  00B4               	movwf	___wmul@multiplier
   642  0061  309C               	movlw	156
   643  0062  00B6               	movwf	___wmul@multiplicand
   644  0063  30FF               	movlw	255
   645  0064  00B7               	movwf	___wmul@multiplicand+1
   646  0065  120A  118A  216B  120A  118A  	fcall	___wmul
   647  006A  0876               	movf	_valor,w
   648  006B  1283               	bcf	3,5	;RP0=0, select bank0
   649  006C  1303               	bcf	3,6	;RP1=0, select bank0
   650  006D  0734               	addwf	?___wmul,w
   651  006E  00BA               	movwf	___awdiv@dividend
   652  006F  0877               	movf	_valor+1,w
   653  0070  1803               	skipnc
   654  0071  0A77               	incf	_valor+1,w
   655  0072  0735               	addwf	?___wmul+1,w
   656  0073  00BB               	movwf	___awdiv@dividend+1
   657  0074  120A  118A  20B2  120A  118A  	fcall	___awdiv
   658  0079  1283               	bcf	3,5	;RP0=0, select bank0
   659  007A  1303               	bcf	3,6	;RP1=0, select bank0
   660  007B  0839               	movf	?___awdiv+1,w
   661  007C  00C8               	movwf	_decena+1
   662  007D  0838               	movf	?___awdiv,w
   663  007E  00C7               	movwf	_decena
   664  007F                     l994:
   665                           
   666                           ;PRCT7.c: 93:     unidad = ((valor -(centena*100)) -(decena*10));
   667  007F  084A               	movf	_centena+1,w
   668  0080  00B5               	movwf	___wmul@multiplier+1
   669  0081  0849               	movf	_centena,w
   670  0082  00B4               	movwf	___wmul@multiplier
   671  0083  309C               	movlw	156
   672  0084  00B6               	movwf	___wmul@multiplicand
   673  0085  30FF               	movlw	255
   674  0086  00B7               	movwf	___wmul@multiplicand+1
   675  0087  120A  118A  216B  120A  118A  	fcall	___wmul
   676  008C  1283               	bcf	3,5	;RP0=0, select bank0
   677  008D  1303               	bcf	3,6	;RP1=0, select bank0
   678  008E  0834               	movf	?___wmul,w
   679  008F  00C1               	movwf	??_setup
   680  0090  0835               	movf	?___wmul+1,w
   681  0091  00C2               	movwf	??_setup+1
   682  0092  0848               	movf	_decena+1,w
   683  0093  00B5               	movwf	___wmul@multiplier+1
   684  0094  0847               	movf	_decena,w
   685  0095  00B4               	movwf	___wmul@multiplier
   686  0096  30F6               	movlw	246
   687  0097  00B6               	movwf	___wmul@multiplicand
   688  0098  30FF               	movlw	255
   689  0099  00B7               	movwf	___wmul@multiplicand+1
   690  009A  120A  118A  216B  120A  118A  	fcall	___wmul
   691  009F  1283               	bcf	3,5	;RP0=0, select bank0
   692  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   693  00A1  0834               	movf	?___wmul,w
   694  00A2  0741               	addwf	??_setup,w
   695  00A3  00C3               	movwf	??_setup+2
   696  00A4  0835               	movf	?___wmul+1,w
   697  00A5  1803               	skipnc
   698  00A6  0A35               	incf	?___wmul+1,w
   699  00A7  0742               	addwf	??_setup+1,w
   700  00A8  00C4               	movwf	??_setup+3
   701  00A9  0876               	movf	_valor,w
   702  00AA  0743               	addwf	??_setup+2,w
   703  00AB  00C5               	movwf	_unidad
   704  00AC  0877               	movf	_valor+1,w
   705  00AD  1803               	skipnc
   706  00AE  0A77               	incf	_valor+1,w
   707  00AF  0744               	addwf	??_setup+3,w
   708  00B0  00C6               	movwf	_unidad+1
   709  00B1                     l52:
   710  00B1  0008               	return
   711  00B2                     __end_of_setup:
   712                           
   713                           	psect	text2
   714  016B                     __ptext2:	
   715 ;; *************** function ___wmul *****************
   716 ;; Defined at:
   717 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  multiplier      2    0[BANK0 ] unsigned int 
   720 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  product         2    4[COMMON] unsigned int 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  2    0[BANK0 ] unsigned int 
   725 ;; Registers used:
   726 ;;		wreg, status,2, status,0
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       4       0       0       0
   733 ;;      Locals:         2       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         2       4       0       0       0
   736 ;;Total ram usage:        6 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 1
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_setup
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746  016B                     ___wmul:	
   747                           ;psect for function ___wmul
   748                           
   749  016B                     l940:	
   750                           ;incstack = 0
   751                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   752                           
   753  016B  01F4               	clrf	___wmul@product
   754  016C  01F5               	clrf	___wmul@product+1
   755  016D                     l942:
   756  016D  1283               	bcf	3,5	;RP0=0, select bank0
   757  016E  1303               	bcf	3,6	;RP1=0, select bank0
   758  016F  1C34               	btfss	___wmul@multiplier,0
   759  0170  2972               	goto	u371
   760  0171  2973               	goto	u370
   761  0172                     u371:
   762  0172  2979               	goto	l146
   763  0173                     u370:
   764  0173                     l944:
   765  0173  0836               	movf	___wmul@multiplicand,w
   766  0174  07F4               	addwf	___wmul@product,f
   767  0175  1803               	skipnc
   768  0176  0AF5               	incf	___wmul@product+1,f
   769  0177  0837               	movf	___wmul@multiplicand+1,w
   770  0178  07F5               	addwf	___wmul@product+1,f
   771  0179                     l146:
   772  0179  3001               	movlw	1
   773  017A                     u385:
   774  017A  1003               	clrc
   775  017B  0DB6               	rlf	___wmul@multiplicand,f
   776  017C  0DB7               	rlf	___wmul@multiplicand+1,f
   777  017D  3EFF               	addlw	-1
   778  017E  1D03               	skipz
   779  017F  297A               	goto	u385
   780  0180                     l946:
   781  0180  3001               	movlw	1
   782  0181                     u395:
   783  0181  1003               	clrc
   784  0182  0CB5               	rrf	___wmul@multiplier+1,f
   785  0183  0CB4               	rrf	___wmul@multiplier,f
   786  0184  3EFF               	addlw	-1
   787  0185  1D03               	skipz
   788  0186  2981               	goto	u395
   789  0187                     l948:
   790  0187  0834               	movf	___wmul@multiplier,w
   791  0188  0435               	iorwf	___wmul@multiplier+1,w
   792  0189  1D03               	btfss	3,2
   793  018A  298C               	goto	u401
   794  018B  298D               	goto	u400
   795  018C                     u401:
   796  018C  296D               	goto	l942
   797  018D                     u400:
   798  018D                     l950:
   799  018D  0875               	movf	___wmul@product+1,w
   800  018E  00B5               	movwf	?___wmul+1
   801  018F  0874               	movf	___wmul@product,w
   802  0190  00B4               	movwf	?___wmul
   803  0191                     l148:
   804  0191  0008               	return
   805  0192                     __end_of___wmul:
   806                           
   807                           	psect	text3
   808  00B2                     __ptext3:	
   809 ;; *************** function ___awdiv *****************
   810 ;; Defined at:
   811 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  divisor         2    4[BANK0 ] int 
   814 ;;  dividend        2    6[BANK0 ] int 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  quotient        2   11[BANK0 ] int 
   817 ;;  sign            1   10[BANK0 ] unsigned char 
   818 ;;  counter         1    9[BANK0 ] unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  2    4[BANK0 ] int 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       4       0       0       0
   829 ;;      Locals:         0       4       0       0       0
   830 ;;      Temps:          0       1       0       0       0
   831 ;;      Totals:         0       9       0       0       0
   832 ;;Total ram usage:        9 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 1
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_setup
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842  00B2                     ___awdiv:	
   843                           ;psect for function ___awdiv
   844                           
   845  00B2                     l810:	
   846                           ;incstack = 0
   847                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   848                           
   849  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   850  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   851  00B4  01BE               	clrf	___awdiv@sign
   852  00B5                     l812:
   853  00B5  1FB9               	btfss	___awdiv@divisor+1,7
   854  00B6  28B8               	goto	u231
   855  00B7  28B9               	goto	u230
   856  00B8                     u231:
   857  00B8  28C0               	goto	l818
   858  00B9                     u230:
   859  00B9                     l814:
   860  00B9  09B8               	comf	___awdiv@divisor,f
   861  00BA  09B9               	comf	___awdiv@divisor+1,f
   862  00BB  0AB8               	incf	___awdiv@divisor,f
   863  00BC  1903               	skipnz
   864  00BD  0AB9               	incf	___awdiv@divisor+1,f
   865  00BE                     l816:
   866  00BE  01BE               	clrf	___awdiv@sign
   867  00BF  0ABE               	incf	___awdiv@sign,f
   868  00C0                     l818:
   869  00C0  1FBB               	btfss	___awdiv@dividend+1,7
   870  00C1  28C3               	goto	u241
   871  00C2  28C4               	goto	u240
   872  00C3                     u241:
   873  00C3  28CD               	goto	l824
   874  00C4                     u240:
   875  00C4                     l820:
   876  00C4  09BA               	comf	___awdiv@dividend,f
   877  00C5  09BB               	comf	___awdiv@dividend+1,f
   878  00C6  0ABA               	incf	___awdiv@dividend,f
   879  00C7  1903               	skipnz
   880  00C8  0ABB               	incf	___awdiv@dividend+1,f
   881  00C9                     l822:
   882  00C9  3001               	movlw	1
   883  00CA  00BC               	movwf	??___awdiv
   884  00CB  083C               	movf	??___awdiv,w
   885  00CC  06BE               	xorwf	___awdiv@sign,f
   886  00CD                     l824:
   887  00CD  01BF               	clrf	___awdiv@quotient
   888  00CE  01C0               	clrf	___awdiv@quotient+1
   889  00CF                     l826:
   890  00CF  0838               	movf	___awdiv@divisor,w
   891  00D0  0439               	iorwf	___awdiv@divisor+1,w
   892  00D1  1903               	btfsc	3,2
   893  00D2  28D4               	goto	u251
   894  00D3  28D5               	goto	u250
   895  00D4                     u251:
   896  00D4  290C               	goto	l846
   897  00D5                     u250:
   898  00D5                     l828:
   899  00D5  01BD               	clrf	___awdiv@counter
   900  00D6  0ABD               	incf	___awdiv@counter,f
   901  00D7  28E3               	goto	l834
   902  00D8                     l830:
   903  00D8  3001               	movlw	1
   904  00D9                     u265:
   905  00D9  1003               	clrc
   906  00DA  0DB8               	rlf	___awdiv@divisor,f
   907  00DB  0DB9               	rlf	___awdiv@divisor+1,f
   908  00DC  3EFF               	addlw	-1
   909  00DD  1D03               	skipz
   910  00DE  28D9               	goto	u265
   911  00DF                     l832:
   912  00DF  3001               	movlw	1
   913  00E0  00BC               	movwf	??___awdiv
   914  00E1  083C               	movf	??___awdiv,w
   915  00E2  07BD               	addwf	___awdiv@counter,f
   916  00E3                     l834:
   917  00E3  1FB9               	btfss	___awdiv@divisor+1,7
   918  00E4  28E6               	goto	u271
   919  00E5  28E7               	goto	u270
   920  00E6                     u271:
   921  00E6  28D8               	goto	l830
   922  00E7                     u270:
   923  00E7                     l836:
   924  00E7  3001               	movlw	1
   925  00E8                     u285:
   926  00E8  1003               	clrc
   927  00E9  0DBF               	rlf	___awdiv@quotient,f
   928  00EA  0DC0               	rlf	___awdiv@quotient+1,f
   929  00EB  3EFF               	addlw	-1
   930  00EC  1D03               	skipz
   931  00ED  28E8               	goto	u285
   932  00EE  0839               	movf	___awdiv@divisor+1,w
   933  00EF  023B               	subwf	___awdiv@dividend+1,w
   934  00F0  1D03               	skipz
   935  00F1  28F4               	goto	u295
   936  00F2  0838               	movf	___awdiv@divisor,w
   937  00F3  023A               	subwf	___awdiv@dividend,w
   938  00F4                     u295:
   939  00F4  1C03               	skipc
   940  00F5  28F7               	goto	u291
   941  00F6  28F8               	goto	u290
   942  00F7                     u291:
   943  00F7  28FF               	goto	l842
   944  00F8                     u290:
   945  00F8                     l838:
   946  00F8  0838               	movf	___awdiv@divisor,w
   947  00F9  02BA               	subwf	___awdiv@dividend,f
   948  00FA  0839               	movf	___awdiv@divisor+1,w
   949  00FB  1C03               	skipc
   950  00FC  03BB               	decf	___awdiv@dividend+1,f
   951  00FD  02BB               	subwf	___awdiv@dividend+1,f
   952  00FE                     l840:
   953  00FE  143F               	bsf	___awdiv@quotient,0
   954  00FF                     l842:
   955  00FF  3001               	movlw	1
   956  0100                     u305:
   957  0100  1003               	clrc
   958  0101  0CB9               	rrf	___awdiv@divisor+1,f
   959  0102  0CB8               	rrf	___awdiv@divisor,f
   960  0103  3EFF               	addlw	-1
   961  0104  1D03               	skipz
   962  0105  2900               	goto	u305
   963  0106                     l844:
   964  0106  3001               	movlw	1
   965  0107  02BD               	subwf	___awdiv@counter,f
   966  0108  1D03               	btfss	3,2
   967  0109  290B               	goto	u311
   968  010A  290C               	goto	u310
   969  010B                     u311:
   970  010B  28E7               	goto	l836
   971  010C                     u310:
   972  010C                     l846:
   973  010C  083E               	movf	___awdiv@sign,w
   974  010D  1903               	btfsc	3,2
   975  010E  2910               	goto	u321
   976  010F  2911               	goto	u320
   977  0110                     u321:
   978  0110  2916               	goto	l850
   979  0111                     u320:
   980  0111                     l848:
   981  0111  09BF               	comf	___awdiv@quotient,f
   982  0112  09C0               	comf	___awdiv@quotient+1,f
   983  0113  0ABF               	incf	___awdiv@quotient,f
   984  0114  1903               	skipnz
   985  0115  0AC0               	incf	___awdiv@quotient+1,f
   986  0116                     l850:
   987  0116  0840               	movf	___awdiv@quotient+1,w
   988  0117  00B9               	movwf	?___awdiv+1
   989  0118  083F               	movf	___awdiv@quotient,w
   990  0119  00B8               	movwf	?___awdiv
   991  011A                     l299:
   992  011A  0008               	return
   993  011B                     __end_of___awdiv:
   994                           
   995                           	psect	text4
   996  011B                     __ptext4:	
   997 ;; *************** function _isr *****************
   998 ;; Defined at:
   999 ;;		line 40 in file "PRCT7.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0
  1015 ;;      Temps:          4       0       0       0       0
  1016 ;;      Totals:         4       0       0       0       0
  1017 ;;Total ram usage:        4 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		Interrupt level 1
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026  011B                     _isr:	
  1027                           ;psect for function _isr
  1028                           
  1029  011B                     i1l898:
  1030                           
  1031                           ;PRCT7.c: 42:    if (INTCONbits.T0IF){
  1032  011B  1D0B               	btfss	11,2	;volatile
  1033  011C  291E               	goto	u33_21
  1034  011D  291F               	goto	u33_20
  1035  011E                     u33_21:
  1036  011E  2962               	goto	i1l49
  1037  011F                     u33_20:
  1038  011F                     i1l900:
  1039                           
  1040                           ;PRCT7.c: 43:             TMR0 = 252;
  1041  011F  30FC               	movlw	252
  1042  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0122  0081               	movwf	1	;volatile
  1045  0123                     i1l902:
  1046                           
  1047                           ;PRCT7.c: 44:             INTCONbits.T0IF = 0;
  1048  0123  110B               	bcf	11,2	;volatile
  1049  0124                     i1l904:
  1050                           
  1051                           ;PRCT7.c: 45:             PORTDbits.RD0 = 0;
  1052  0124  1008               	bcf	8,0	;volatile
  1053  0125                     i1l906:
  1054                           
  1055                           ;PRCT7.c: 46:             PORTDbits.RD1 = 0;
  1056  0125  1088               	bcf	8,1	;volatile
  1057  0126                     i1l908:
  1058                           
  1059                           ;PRCT7.c: 47:             PORTDbits.RD2 = 0;
  1060  0126  1108               	bcf	8,2	;volatile
  1061  0127                     i1l910:
  1062                           
  1063                           ;PRCT7.c: 49:             if (bandera == 0){
  1064  0127  0878               	movf	_bandera,w
  1065  0128  0479               	iorwf	_bandera+1,w
  1066  0129  1D03               	btfss	3,2
  1067  012A  292C               	goto	u34_21
  1068  012B  292D               	goto	u34_20
  1069  012C                     u34_21:
  1070  012C  293B               	goto	i1l918
  1071  012D                     u34_20:
  1072  012D                     i1l912:
  1073                           
  1074                           ;PRCT7.c: 50:                 PORTDbits.RD0 = 1;
  1075  012D  1408               	bsf	8,0	;volatile
  1076  012E                     i1l914:
  1077                           
  1078                           ;PRCT7.c: 51:                 PORTC = display[unidad];
  1079  012E  0845               	movf	_unidad,w
  1080  012F  00F0               	movwf	??_isr
  1081  0130  0770               	addwf	??_isr,w
  1082  0131  3E20               	addlw	(low (_display| 0))& (0+255)
  1083  0132  0084               	movwf	4
  1084  0133  1383               	bcf	3,7	;select IRP bank0
  1085  0134  0800               	movf	0,w
  1086  0135  0087               	movwf	7	;volatile
  1087  0136                     i1l916:
  1088                           
  1089                           ;PRCT7.c: 52:                 bandera = 1;}
  1090  0136  3001               	movlw	1
  1091  0137  00F8               	movwf	_bandera
  1092  0138  3000               	movlw	0
  1093  0139  00F9               	movwf	_bandera+1
  1094  013A  2962               	goto	i1l49
  1095  013B                     i1l918:
  1096  013B  0378               	decf	_bandera,w
  1097  013C  0479               	iorwf	_bandera+1,w
  1098  013D  1D03               	btfss	3,2
  1099  013E  2940               	goto	u35_21
  1100  013F  2941               	goto	u35_20
  1101  0140                     u35_21:
  1102  0140  294F               	goto	i1l926
  1103  0141                     u35_20:
  1104  0141                     i1l920:
  1105                           
  1106                           ;PRCT7.c: 54:                 PORTDbits.RD1 = 1;
  1107  0141  1488               	bsf	8,1	;volatile
  1108  0142                     i1l922:
  1109                           
  1110                           ;PRCT7.c: 55:                 PORTC = display[decena];
  1111  0142  0847               	movf	_decena,w
  1112  0143  00F0               	movwf	??_isr
  1113  0144  0770               	addwf	??_isr,w
  1114  0145  3E20               	addlw	(low (_display| 0))& (0+255)
  1115  0146  0084               	movwf	4
  1116  0147  1383               	bcf	3,7	;select IRP bank0
  1117  0148  0800               	movf	0,w
  1118  0149  0087               	movwf	7	;volatile
  1119  014A                     i1l924:
  1120                           
  1121                           ;PRCT7.c: 56:                 bandera = 2;}
  1122  014A  3002               	movlw	2
  1123  014B  00F8               	movwf	_bandera
  1124  014C  3000               	movlw	0
  1125  014D  00F9               	movwf	_bandera+1
  1126  014E  2962               	goto	i1l49
  1127  014F                     i1l926:
  1128  014F  3002               	movlw	2
  1129  0150  0678               	xorwf	_bandera,w
  1130  0151  0479               	iorwf	_bandera+1,w
  1131  0152  1D03               	btfss	3,2
  1132  0153  2955               	goto	u36_21
  1133  0154  2956               	goto	u36_20
  1134  0155                     u36_21:
  1135  0155  2962               	goto	i1l45
  1136  0156                     u36_20:
  1137  0156                     i1l928:
  1138                           
  1139                           ;PRCT7.c: 58:                 PORTDbits.RD2 = 1;
  1140  0156  1508               	bsf	8,2	;volatile
  1141  0157                     i1l930:
  1142                           
  1143                           ;PRCT7.c: 59:                 PORTC = display[centena];
  1144  0157  0849               	movf	_centena,w
  1145  0158  00F0               	movwf	??_isr
  1146  0159  0770               	addwf	??_isr,w
  1147  015A  3E20               	addlw	(low (_display| 0))& (0+255)
  1148  015B  0084               	movwf	4
  1149  015C  1383               	bcf	3,7	;select IRP bank0
  1150  015D  0800               	movf	0,w
  1151  015E  0087               	movwf	7	;volatile
  1152  015F                     i1l932:
  1153                           
  1154                           ;PRCT7.c: 60:                 bandera = 0;}
  1155  015F  01F8               	clrf	_bandera
  1156  0160  01F9               	clrf	_bandera+1
  1157  0161  2962               	goto	i1l49
  1158  0162                     i1l45:
  1159  0162                     i1l49:
  1160  0162  0873               	movf	??_isr+3,w
  1161  0163  008A               	movwf	10
  1162  0164  0872               	movf	??_isr+2,w
  1163  0165  0084               	movwf	4
  1164  0166  0E71               	swapf	??_isr+1,w
  1165  0167  0083               	movwf	3
  1166  0168  0EFE               	swapf	btemp,f
  1167  0169  0E7E               	swapf	btemp,w
  1168  016A  0009               	retfie
  1169  016B                     __end_of_isr:
  1170  007E                     btemp	set	126	;btemp
  1171  007E                     wtemp0	set	126
  1172                           
  1173                           	psect	intentry
  1174  0004                     __pintentry:	
  1175                           ;incstack = 0
  1176                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1177                           
  1178  0004                     interrupt_function:
  1179  007E                     saved_w	set	btemp
  1180  0004  00FE               	movwf	btemp
  1181  0005  0E03               	swapf	3,w
  1182  0006  00F1               	movwf	??_isr+1
  1183  0007  0804               	movf	4,w
  1184  0008  00F2               	movwf	??_isr+2
  1185  0009  080A               	movf	10,w
  1186  000A  00F3               	movwf	??_isr+3
  1187  000B  120A  118A  291B   	ljmp	_isr
  1188                           
  1189                           	psect	idloc
  1190                           
  1191                           ;Config register IDLOC0 @ 0x2000
  1192                           ;	unspecified, using default values
  1193  2000                     	org	8192
  1194  2000  3FFF               	dw	16383
  1195                           
  1196                           ;Config register IDLOC1 @ 0x2001
  1197                           ;	unspecified, using default values
  1198  2001                     	org	8193
  1199  2001  3FFF               	dw	16383
  1200                           
  1201                           ;Config register IDLOC2 @ 0x2002
  1202                           ;	unspecified, using default values
  1203  2002                     	org	8194
  1204  2002  3FFF               	dw	16383
  1205                           
  1206                           ;Config register IDLOC3 @ 0x2003
  1207                           ;	unspecified, using default values
  1208  2003                     	org	8195
  1209  2003  3FFF               	dw	16383
  1210                           
  1211                           	psect	config
  1212                           
  1213                           ;Config register CONFIG1 @ 0x2007
  1214                           ;	Oscillator Selection bits
  1215                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1216                           ;	Watchdog Timer Enable bit
  1217                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1218                           ;	Power-up Timer Enable bit
  1219                           ;	PWRTE = OFF, PWRT disabled
  1220                           ;	RE3/MCLR pin function select bit
  1221                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1222                           ;	Code Protection bit
  1223                           ;	CP = OFF, Program memory code protection is disabled
  1224                           ;	Data Code Protection bit
  1225                           ;	CPD = OFF, Data memory code protection is disabled
  1226                           ;	Brown Out Reset Selection bits
  1227                           ;	BOREN = OFF, BOR disabled
  1228                           ;	Internal External Switchover bit
  1229                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1230                           ;	Fail-Safe Clock Monitor Enabled bit
  1231                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1232                           ;	Low Voltage Programming Enable bit
  1233                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1234                           ;	In-Circuit Debugger Mode bit
  1235                           ;	DEBUG = 0x1, unprogrammed default
  1236  2007                     	org	8199
  1237  2007  20D4               	dw	8404
  1238                           
  1239                           ;Config register CONFIG2 @ 0x2008
  1240                           ;	Brown-out Reset Selection bit
  1241                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1242                           ;	Flash Program Memory Self Write Enable bits
  1243                           ;	WRT = OFF, Write protection off
  1244  2008                     	org	8200
  1245  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         2
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     17      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->___wmul
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1280
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                4     4      0    1280
                                             13 BANK0      4     4      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              4 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     ___awdiv
       ___wmul (ARG)
     ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      2B       5       53.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 09 22:30:18 2022

                      pc 0002                       l52 00B1                       l57 01A5  
                     l58 01A5             ___awdiv@sign 003E                       fsr 0004  
    ___wmul@multiplicand 0036                      l146 0179                      l148 0191  
                    l810 00B2                      l299 011A                      l820 00C4  
                    l812 00B5                      l830 00D8                      l822 00C9  
                    l814 00B9                      l840 00FE                      l832 00DF  
                    l824 00CD                      l816 00BE                      l850 0116  
                    l842 00FF                      l834 00E3                      l826 00CF  
                    l818 00C0                      l844 0106                      l836 00E7  
                    l828 00D5                      l940 016B                      l838 00F8  
                    l846 010C                      l950 018D                      l942 016D  
                    l848 0111                      l944 0173                      l960 0030  
                    l946 0180                      l970 0035                      l962 0031  
                    l954 0025                      l948 0187                      l980 003E  
                    l972 0036                      l964 0032                      l956 0029  
                    l990 0046                      l982 003F                      l974 0039  
                    l966 0033                      l958 002F                      l992 0059  
                    l984 0040                      l976 003C                      l968 0034  
                    l994 007F                      l986 0041                      l978 003D  
                    l988 0042                      l998 0192                      u310 010C  
                    u230 00B9                      u311 010B                      u231 00B8  
                    u320 0111                      u240 00C4                      u400 018D  
                    u321 0110                      u305 0100                      u241 00C3  
                    u401 018C                      u250 00D5                      u251 00D4  
                    u270 00E7                      u271 00E6                      u265 00D9  
                    u290 00F8                      u370 0173                      u291 00F7  
                    u371 0172                      u285 00E8                      u295 00F4  
                    u385 017A                      u395 0181                      _isr 011B  
                    fsr0 0004                      indf 0000                     l1000 019C  
                   l1002 01A0                     ?_isr 0070                     i1l45 0162  
                   i1l49 0162                     _TMR0 0001                     _main 0192  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 011B                    _ANSEL 0188  
        ___awdiv@divisor 0038                    i1l900 011F                    i1l910 0127  
                  i1l902 0123                    i1l920 0141                    i1l912 012D  
                  i1l904 0124                    i1l930 0157                    i1l922 0142  
                  i1l914 012E                    i1l906 0125                    i1l932 015F  
                  i1l924 014A                    i1l916 0136                    i1l908 0126  
                  i1l926 014F                    i1l918 013B                    i1l928 0156  
                  i1l898 011B          ___awdiv@counter 003D                    u33_20 011F  
                  u33_21 011E                    u34_20 012D                    u34_21 012C  
                  u35_20 0141                    u35_21 0140                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u36_20 0156  
                  u36_21 0155                    _TRISA 0085                    _TRISC 0087  
                  _valor 0076                    _setup 0025                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 01A9                   ??_main 0076         ___awdiv@dividend 003A  
                 ?_setup 0070                   _ANSELH 0189                   ___wmul 016B  
              ??___awdiv 003C                   _decena 0047         ___awdiv@quotient 003F  
                 _unidad 0045                   saved_w 007E  __end_of__initialization 0021  
         __pcstackCOMMON 0070             __pidataBANK0 01A9            __end_of_setup 00B2  
         _OPTION_REGbits 0081                  ??_setup 0041               __pnvCOMMON 0076  
             __pmaintext 0192                  ?___wmul 0034               __pintentry 0004  
                ___awdiv 00B2                  _bandera 0078                  _centena 0049  
                __ptext1 0025                  __ptext2 016B                  __ptext3 00B2  
                __ptext4 011B                  _display 0020     end_of_initialization 0021  
              _PORTDbits 0008                _TRISDbits 0088           __end_of___wmul 0192  
    start_initialization 0011              __end_of_isr 016B                 ??___wmul 0074  
             init_fetch0 01BD              __pdataBANK0 0020              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0034                __pnvBANK0 0045  
               ?___awdiv 0038        interrupt_function 0004           ___wmul@product 0074  
      ___wmul@multiplier 0034               _INTCONbits 000B                 init_ram0 01C1  
               intlevel1 0000               _OSCCONbits 008F  
